@startuml
interface IProveedorClima {
    public CondicionClimatica obtenerCondicionClimaticaBuenosAires()
}



class AccuWeatherAdapter implements IProveedorClima{

    public CondicionClimatica obtenerCondicionClimaticaBuenosAires()

    private CondicionClimatica obtenerCondicionClimatica(String ciudad)

    private short getProbabilidadPrecipitacion(List<Map<String, Object>> climaCiudad)

    private short getTemperaturaEnCelcius(List<Map<String, Object>> climaCiudad)

    private short transformarACelsius(short temperaturaEnFahrenheit)

    private List<Map<String, Object>> getInformacionClima(String ciudad)

    private short getTemperaturaEnFahrenheit(List<Map<String, Object>> climaCiudad)
}


class AccuWeatherAPI {

    public final List<Map<String, Object>> getWeather(String ciudad) 
}



class GeneradorSugerencias {
    IProveedorClima proveedorClima;

    public Atuendo obtenerSugerencia(List<Prenda> prendas)

    public Prenda obtenerPrendaAptaDeCategoria(Categoria categoria, List<Prenda> prendas, short temperatura)
}


class Atuendo {
    Prenda prendaSuperior;
    Prenda prendaInferior;
    Prenda calzado;
    Prenda accesorio;
}


class Prenda {
	private Tipo tipo;
	private Color colorPrimario;
	private Color colorSecundario;
	private Material material;
	private Trama trama;

	public boolean esAdecuadoParaTemperatura(short temperatura)

	public boolean esDeCategoria(Categoria categoria)
}

enum Tipo {

	private Categoria categoria;
	private short temperaturaMaxima;

	Tipo(Categoria categoria, short temperaturaMaxima)

	public boolean esAdecuadoParaTemperatura(short unaTemperatura)

	public boolean esDeCategoria(Categoria categoria)
}




Prenda --> Tipo

GeneradorSugerencias..>"*" Prenda

GeneradorSugerencias ..> Atuendo

GeneradorSugerencias--> IProveedorClima

AccuWeatherAdapter..>AccuWeatherAPI
@enduml
